{"version":3,"file":"static/js/669.0e0b6563.chunk.js","mappings":"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","sources":["components/MySpinner.jsx","../node_modules/@chakra-ui/icons/dist/chunk-K7BDDMD2.mjs","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/icons/dist/chunk-XOVTCM5B.mjs","components/Filter/Filter.jsx","../node_modules/@chakra-ui/button/dist/chunk-3HSDMH4Y.mjs","../node_modules/@chakra-ui/icons/dist/chunk-HFJCK6H7.mjs","components/ContactDetails/ContactDetails.jsx","components/ContactList/ContactList.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","pages/Contacts.jsx","utils/toasts.jsx"],"sourcesContent":["import { Spinner } from \"@chakra-ui/react\"\n\nfunction MySpinner() {\n  return (\n    <Spinner\n  thickness='4px'\n  speed='0.65s'\n  emptyColor='gray.200'\n  color='green.400'\n  size='xl'\n/>\n  )\n}\n\nexport default MySpinner","// src/Info.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar InfoIcon = createIcon({\n  d: \"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n});\n\nexport {\n  InfoIcon\n};\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/selectors';\nimport {\n  Input,\n  Stack,\n  Button,\n  InputGroup,\n  InputRightElement,\n  useToast,\n} from '@chakra-ui/react';\nimport { InfoIcon, PhoneIcon } from '@chakra-ui/icons';\nimport { addContactFailure, addContactSuccess } from 'utils/toasts';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const { items } = useSelector(getContacts);\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isInPhoneBook = (name, contacts) => {\n    return contacts.find(contact => contact.name === name) ? true : false;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (items.length && isInPhoneBook(name, items)) {\n      alert(name + ' is already in contacts.');\n    } else {\n      dispatch(addContact({ name, number }))\n        .unwrap()\n        .then(() =>\n          toast(addContactSuccess)\n        )\n        .catch(() =>\n          toast(addContactFailure)\n        );\n    }\n    setName('');\n    setNumber('');\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Stack as=\"form\" spacing={3} w={400} mb={10} onSubmit={handleSubmit}>\n      <label>\n        <p>Name</p>\n        <InputGroup>\n          <InputRightElement pointerEvents=\"none\">\n            <InfoIcon color='green.400'/>\n          </InputRightElement>\n          <Input\n            focusBorderColor=\"green.400\"\n            shadow=\"md\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleInputChange}\n          />\n        </InputGroup>\n      </label>\n      <label>\n        <p>Number</p>\n        <InputGroup mb={10}>\n          <InputRightElement pointerEvents=\"none\">\n            <PhoneIcon color=\"green.400\" />\n          </InputRightElement>\n          <Input\n            focusBorderColor=\"green.400\"\n            shadow=\"md\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleInputChange}\n          />\n        </InputGroup>\n      </label>\n      <Button\n        bg=\"green.400\"\n        color=\"white\"\n        _hover={{\n          background: 'green.200',\n          color: 'white',\n        }}\n        variant=\"outline\"\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </Stack>\n  );\n}\n","// src/Search.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\"\n});\n\nexport {\n  SearchIcon\n};\n","import { Input, InputRightElement, InputGroup, Box } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { SearchIcon } from '@chakra-ui/icons';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Box >\n      <p>Find contacts by name</p>\n      <InputGroup>\n        <InputRightElement pointerEvents=\"none\">\n          <SearchIcon color=\"green.400\" />\n        </InputRightElement>\n        <Input\n          focusBorderColor=\"green.400\"\n          shadow=\"md\"\n          w={400}\n          mb={20}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n          onBlur={() => dispatch(setFilter(''))}\n        />\n      </InputGroup>\n    </Box>\n  );\n}\n","import {\n  Button\n} from \"./chunk-NAA7TEES.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n","// src/Delete.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport {\n  DeleteIcon\n};\n","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { Box,Flex,IconButton, Text } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n// import { Button } from 'utils/Utils.styled';\n\nexport default function ContactDetails({contact}) {\n  const dispatch = useDispatch()\n\n    return (\n        <Flex justifyContent='space-between' alignItems='center' width={400}>\n          <Box>\n            <Text fontWeight={500}>{contact.name}</Text>\n            <Text>{contact.number}</Text>\n          </Box>\n            \n            <IconButton\n            size='sm'\n            as='button'\n            variant='solid'\n            colorScheme='green'\n            aria-label='Delete icon'\n            icon={<DeleteIcon />}\n            type=\"button\" \n            onClick={() => dispatch(deleteContact(contact.id))}\n/>\n            \n          </Flex>\n    )\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getVisibleContacts, getContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactDetails from '../ContactDetails/ContactDetails'\nimport { Stack } from '@chakra-ui/react';\nimport MySpinner from 'components/MySpinner';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(getVisibleContacts);\n  const { isLoading, error } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Stack spacing={4}>\n      {isLoading && !error && <MySpinner/>}\n      {error && <p>{error}</p>}\n      {visibleContacts.length > 0 &&\n        visibleContacts.map((contact) => (\n          <ContactDetails key={contact.id} contact={contact} />\n        ))}\n    </Stack>\n  );\n}","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Flex, Grid, Heading } from '@chakra-ui/react';\n\nfunction Contacts() {\n  return (\n    <Grid justifyItems='center'>\n      <Flex justifyContent='center' flexWrap='wrap' gap={10}>\n        <ContactForm />\n        <Filter />\n      </Flex>\n        <Heading size='lg' color='black' mb={6}>Contacts</Heading>\n        <ContactList />\n    \n    </Grid>\n    \n  )\n}\n\nexport default Contacts","export const logInSuccess = {\n    title: 'You logged in',\n    description: \"Now you can see your contacts\",\n    status: 'success',\n    duration: 3000,\n    isClosable: true,\n    position: 'top'\n  }\n\nexport const LogInFialure = {\n    title: 'Log in failure.',\n    description:'Check your email and password.',\n    status: 'error',\n    duration: 3000,\n    isClosable: true,\n    position: 'top',\n  }\n\n  export const registerFialure = {\n    title: 'Register failure.',\n    description:'Check your name, email and password.',\n    status: 'error',\n    duration: 3000,\n    isClosable: true,\n    position: 'top',\n  }\n\nexport const registerSuccess = {\n  title: 'Account created.',\n  description: \"We've created your account for you.\",\n  status: 'success',\n  duration: 3000,\n  isClosable: true,\n  position: 'top'\n}\n\nexport const addContactSuccess = {\n  title: 'Contact added.',\n          description: \"We've created your new contact\",\n            status: 'success',\n            duration: 3000,\n            isClosable: true,\n            position: 'top',\n}\n\nexport const addContactFailure = {\n  title: \"Failure.\",\n  description: \"Something went wrong. Try again later\",\n  status: 'error',\n  duration: 3000,\n  isClosable: true,\n  position: 'top',\n}"],"names":["thickness","speed","emptyColor","color","size","InfoIcon","createIcon","d","PhoneIcon","displayName","viewBox","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","toast","useToast","items","useSelector","getContacts","handleInputChange","e","currentTarget","value","as","spacing","w","mb","onSubmit","preventDefault","length","contacts","find","contact","isInPhoneBook","alert","addContact","unwrap","then","addContactSuccess","catch","addContactFailure","reset","pointerEvents","I","focusBorderColor","shadow","type","pattern","title","required","onChange","bg","_hover","background","variant","SearchIcon","Filter","filter","getFilter","setFilter","toLowerCase","onBlur","IconButton","forwardRef","props","ref","icon","children","isRound","ariaLabel","rest","element","_children","isValidElement","cloneElement","focusable","jsx","Button","padding","borderRadius","DeleteIcon","path","fill","ContactDetails","justifyContent","alignItems","width","fontWeight","colorScheme","onClick","deleteContact","id","ContactList","visibleContacts","getVisibleContacts","isLoading","error","useEffect","fetchContacts","MySpinner","map","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","chakra","__css","justifyItems","flexWrap","logInSuccess","description","status","duration","isClosable","position","LogInFialure","registerFialure","registerSuccess"],"sourceRoot":""}