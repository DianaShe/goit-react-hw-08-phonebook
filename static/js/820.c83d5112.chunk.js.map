{"version":3,"file":"static/js/820.c83d5112.chunk.js","mappings":"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","sources":["components/RegisterForm.jsx","pages/Register.jsx","utils/toasts.jsx","../node_modules/@chakra-ui/icons/dist/chunk-JIJ6CQ2I.mjs"],"sourcesContent":["import { EmailIcon, Icon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Heading,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack,\n  useToast,\n  Text,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/operations';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { useNavigate } from 'react-router-dom';\nimport { registerFialure, registerSuccess } from 'utils/toasts';\n\nfunction RegisterForm() {\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registerUser({ name, email, password }))\n      .unwrap()\n      .then(() => toast(registerSuccess))\n      .catch(() => toast(registerFialure));\n    setName('');\n    setEmail('');\n    setPassword('');\n    e.currentTarget.reset();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Stack\n      as=\"form\"\n      spacing={4}\n      w={400}\n      mr=\"auto\"\n      ml=\"auto\"\n      onSubmit={handleSubmit}\n    >\n      <Heading textAlign=\"center\" color=\"green.400\">\n        Register\n      </Heading>\n      <InputGroup>\n        <InputRightElement>\n          <Icon as={BsFillPersonFill} />\n        </InputRightElement>\n        <Input\n          placeholder=\"Enter your name\"\n          pr=\"4.5rem\"\n          name=\"name\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleInputChange}\n        />\n      </InputGroup>\n      <InputGroup>\n        <InputRightElement>\n          <EmailIcon />\n        </InputRightElement>\n        <Input\n          placeholder=\"Enter your email\"\n          pr=\"4.5rem\"\n          name=\"email\"\n          type=\"email\"\n          pattern=\"/^\\S+@\\S+\\.\\S+$/\"\n          title=\"Email should contain @. For example, example@mail.com\"\n          onChange={handleInputChange}\n        />\n      </InputGroup>\n      <InputGroup size=\"md\">\n        <Input\n          pr=\"4.5rem\"\n          type={show ? 'text' : 'password'}\n          placeholder=\"Enter password\"\n          name=\"password\"\n          minLength={7}\n          onChange={handleInputChange}\n        />\n        <InputRightElement width=\"4.5rem\">\n          <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\n            {show ? 'Hide' : 'Show'}\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n      <Button type=\"submit\">Register now</Button>\n      <Text textAlign=\"center\">Already have an account?</Text>\n      <Button\n        borderColor=\"green.400\"\n        color=\"green.400\"\n        _hover={{\n          background: 'green.400',\n          color: 'white',\n        }}\n        variant=\"outline\"\n        onClick={() => navigate('/login')}\n      >\n        Log In\n      </Button>\n    </Stack>\n  );\n}\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm\";\n\nexport default function Register() {\n    return (\n        <RegisterForm/>\n    )\n}","export const logInSuccess = {\n    title: 'You logged in',\n    description: \"Now you can see your contacts\",\n    status: 'success',\n    duration: 3000,\n    isClosable: true,\n    position: 'top'\n  }\n\nexport const LogInFialure = {\n    title: 'Log in failure.',\n    description:'Check your email and password.',\n    status: 'error',\n    duration: 3000,\n    isClosable: true,\n    position: 'top',\n  }\n\n  export const registerFialure = {\n    title: 'Register failure.',\n    description:'Check your name, email and password.',\n    status: 'error',\n    duration: 3000,\n    isClosable: true,\n    position: 'top',\n  }\n\nexport const registerSuccess = {\n  title: 'Account created.',\n  description: \"We've created your account for you.\",\n  status: 'success',\n  duration: 3000,\n  isClosable: true,\n  position: 'top'\n}\n\nexport const addContactSuccess = {\n  title: 'Contact added.',\n          description: \"We've created your new contact\",\n            status: 'success',\n            duration: 3000,\n            isClosable: true,\n            position: 'top',\n}\n\nexport const addContactFailure = {\n  title: \"Failure.\",\n  description: \"Something went wrong. Try again later\",\n  status: 'error',\n  duration: 3000,\n  isClosable: true,\n  position: 'top',\n}","// src/Email.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EmailIcon = createIcon({\n  displayName: \"EmailIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M11.114,14.556a1.252,1.252,0,0,0,1.768,0L22.568,4.87a.5.5,0,0,0-.281-.849A1.966,1.966,0,0,0,22,4H2a1.966,1.966,0,0,0-.289.021.5.5,0,0,0-.281.849Z\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.888,5.832a.182.182,0,0,0-.2.039l-6.2,6.2a.251.251,0,0,0,0,.354l5.043,5.043a.75.75,0,1,1-1.06,1.061l-5.043-5.043a.25.25,0,0,0-.354,0l-2.129,2.129a2.75,2.75,0,0,1-3.888,0L7.926,13.488a.251.251,0,0,0-.354,0L2.529,18.531a.75.75,0,0,1-1.06-1.061l5.043-5.043a.251.251,0,0,0,0-.354l-6.2-6.2a.18.18,0,0,0-.2-.039A.182.182,0,0,0,0,6V18a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A.181.181,0,0,0,23.888,5.832Z\" })\n  ] })\n});\n\nexport {\n  EmailIcon\n};\n"],"names":["useState","show","setShow","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","toast","useToast","navigate","useNavigate","handleInputChange","e","currentTarget","value","as","spacing","w","mr","ml","onSubmit","preventDefault","registerUser","unwrap","then","registerSuccess","catch","registerFialure","reset","textAlign","color","BsFillPersonFill","I","placeholder","pr","type","pattern","title","onChange","size","minLength","width","h","onClick","borderColor","_hover","background","variant","Register","logInSuccess","description","status","duration","isClosable","position","LogInFialure","addContactSuccess","addContactFailure","EmailIcon","createIcon","displayName","path","jsxs","fill","children","jsx","d"],"sourceRoot":""}